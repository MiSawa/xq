use crate::test;

test!(
    isfinite_isinfinite,
    r#"
    0, nan, infinite, -infinite | [isfinite, isinfinite]
    "#,
    r#"
    null
    "#,
    r#"
    [true,false]
    [true,false]
    [false,true]
    [false,true]
    "#
);

test!(
    floor_round_ceil_trunc_fabs_functions,
    r#"
    map(floor), map(round), map(ceil), map(trunc), map(fabs)
    "#,
    r#"
    [-3.5,-2.1,-1,-0.3,0,0.3,0.7,1,1.2,2.8,3.5]
    "#,
    r#"
    [-4,-3,-1,-1,0,0,0,1,1,2,3]
    [-4,-2,-1,-0,0,0,1,1,1,3,4]
    [-3,-2,-1,-0,0,1,1,1,2,3,4]
    [-3,-2,-1,-0,0,0,0,1,1,2,3]
    [3.5,2.1,1,0.3,0,0.3,0.7,1,1.2,2.8,3.5]
    "#
);

test!(
    sqrt_cbrt_functions,
    r#"
    map(sqrt | select(isnan | not)), map(cbrt) | map(. * 10000 | round)
    "#,
    r#"
    [-4,-3.375,0,0.125,1,8,9,16.777216]
    "#,
    r#"
    [0,3536,10000,28284,30000,40960]
    [-15874,-15000,0,5000,10000,20000,20801,25600]
    "#
);

test!(
    trigonometric_functions,
    r#"
    map(sin), map(cos), map(tan) | map(. * 1000000000 | floor / 1000000000)
    "#,
    r#"
    [0,1,2]
    "#,
    r#"
    [0,0.841470984, 0.909297426]
    [1,0.540302305,-0.416146837]
    [0,1.557407724,-2.185039864]
    "#
);

test!(
    inverse_trigonometric_functions,
    r#"
    map(asin), map(acos), map(atan) | map(. * 1000000000 | floor / 1000000000)
    "#,
    r#"
    [0,0.5,1]
    "#,
    r#"
    [0,0.523598775,1.570796326]
    [1.570796326,1.047197551,0]
    [0,0.463647609,0.785398163]
    "#
);

test!(
    hyperbolic_functions,
    r#"
    map(sinh), map(cosh), map(tanh) | map(. * 1000000000 | floor / 1000000000)
    "#,
    r#"
    [0,1,2]
    "#,
    r#"
    [0,1.175201193,3.626860407]
    [1,1.543080634,3.762195691]
    [0,0.761594155,0.964027580]
    "#
);

test!(
    inverse_hyperbolic_functions,
    r#"
    map(asinh), map(.+1 | acosh), map(./3 | atanh) | map(. * 1000000000 | floor / 1000000000)
    "#,
    r#"
    [0,1,2]
    "#,
    r#"
    [0,0.881373587,1.443635475]
    [0,1.316957896,1.762747174]
    [0,0.346573590,0.804718956]
    "#
);

test!(
    exponential_functions,
    r#"
    map(exp), map(exp2), map(exp10), map(expm1) | map(. * 1000000000 | floor / 1000000000)
    "#,
    r#"
    [-1,-0.5,0,0.5,1,1.5,2]
    "#,
    r#"
    [0.367879441,0.606530659,1,1.64872127,2.718281828,4.48168907,7.389056098]
    [0.5,0.707106781,1,1.414213562,2,2.828427124,4]
    [0.1,0.316227766,1,3.16227766,10,31.622776601,100]
    [-0.632120559,-0.393469341,0,0.64872127,1.718281828,3.48168907,6.389056098]
    "#
);

test!(
    logarithmic_functions,
    r#"
    map(log), map(log2), map(log10) | map(. * 1000000000 | floor / 1000000000)
    "#,
    r#"
    [0.1,0.5,1,2,3,10]
    "#,
    r#"
    [-2.302585093,-0.693147181,0,0.69314718,1.098612288,2.302585092]
    [-3.321928095,-1,0,1,1.5849625,3.321928094]
    [-1,-0.301029996,0,0.301029995,0.477121254,1]
    "#
);

test!(
    fmax_fmin_copysign_functions,
    r#"
    [fmax(0.1,0.3; 0.2,0.4)],
    [fmin(0.1,0.3; 0.2,0.4)],
    [copysign(0,0.1,-0.3; 0.2,-0.4)]
    "#,
    r#"
    null
    "#,
    r#"
    [0.2,0.4,0.3,0.4]
    [0.1,0.1,0.2,0.3]
    [0,-0,0.1,-0.1,0.3,-0.3]
    "#
);

test!(
    atan2_hypot_powf_functions,
    r#"
    [atan2(0.1,0.3; 0.2,0.4)],
    [hypot(0.1,0.3; 0.2,0.4)],
    [pow(0.1,0.3; 0.2,0.4)] |
    map(. * 1000000000 | floor / 1000000000)
    "#,
    r#"
    null
    "#,
    r#"
    [0.463647609,0.244978663,0.982793723,0.643501108]
    [0.223606797,0.412310562,0.360555127,0.5]
    [0.630957344,0.39810717,0.786003085,0.61780085]
    "#
);

test!(
    fma_function,
    r#"
    [fma(1.5,2.5; 3.5,4.5; 5.25,6.75)]
    "#,
    r#"
    null
    "#,
    r#"
    [10.5,12,12,13.5,14,15.5,16.5,18]
    "#
);
